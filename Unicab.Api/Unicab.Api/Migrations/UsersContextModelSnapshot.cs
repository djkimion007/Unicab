// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Unicab.Api.Contexts;

namespace Unicab.Api.Migrations
{
    [DbContext(typeof(UsersContext))]
    partial class UsersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Unicab.Api.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDateTime");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("ModifiedDateTime");

                    b.Property<string>("Notes");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("StaffNo");

                    b.Property<string>("StaffPosition");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Unicab.Api.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedByAdminId");

                    b.Property<DateTime>("AddedDateTime");

                    b.Property<string>("CarColour");

                    b.Property<byte[]>("CarInsuranceGrantPhoto");

                    b.Property<string>("CarMake");

                    b.Property<string>("CarMakeYear");

                    b.Property<string>("CarModel");

                    b.Property<string>("CarPlateNo");

                    b.Property<DateTime>("CarRoadTaxDueDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<DateTime>("DriversLicenseDueDate");

                    b.Property<byte[]>("DriversLicensePhoto");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("LastName");

                    b.Property<byte[]>("MatricsCardPhoto");

                    b.Property<string>("MatricsNo");

                    b.Property<DateTime>("ModifiedDateTime");

                    b.Property<string>("Notes");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("DriverId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Unicab.Api.Models.DriverApplicant", b =>
                {
                    b.Property<int>("DriverApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDateTime");

                    b.Property<int>("ApprovedByAdminId");

                    b.Property<DateTime>("ApprovedDateTime");

                    b.Property<string>("CarColour");

                    b.Property<byte[]>("CarInsuranceGrantPhoto");

                    b.Property<string>("CarMake");

                    b.Property<string>("CarMakeYear");

                    b.Property<string>("CarModel");

                    b.Property<string>("CarPlateNo");

                    b.Property<DateTime>("CarRoadTaxDueDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<DateTime>("DriversLicenseDueDate");

                    b.Property<byte[]>("DriversLicensePhoto");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<bool>("IsApproved");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("MatricsCardPhoto");

                    b.Property<string>("MatricsNo");

                    b.Property<string>("Notes");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("DriverApplicantId");

                    b.ToTable("DriverApplicants");
                });

            modelBuilder.Entity("Unicab.Api.Models.DriverBlacklist", b =>
                {
                    b.Property<int>("DriverBlacklistId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlacklistedByAdminId");

                    b.Property<DateTime>("BlacklistedDateTime");

                    b.Property<int>("BlacklistedDuration");

                    b.Property<string>("BlacklistedReason");

                    b.Property<int>("DriverId");

                    b.Property<int>("UnblacklistedByAdminId");

                    b.Property<DateTime>("UnblacklistedDateTime");

                    b.Property<string>("UnblacklistedReason");

                    b.HasKey("DriverBlacklistId");

                    b.ToTable("DriverBlacklists");
                });

            modelBuilder.Entity("Unicab.Api.Models.Passenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedByAdminId");

                    b.Property<DateTime>("AddedDateTime");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("LastName");

                    b.Property<byte[]>("MatricsCardPhoto");

                    b.Property<string>("MatricsNo");

                    b.Property<DateTime>("ModifiedDateTime");

                    b.Property<string>("Notes");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("PassengerId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Unicab.Api.Models.PassengerApplicant", b =>
                {
                    b.Property<int>("PassengerApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDateTime");

                    b.Property<int>("ApprovedByAdminId");

                    b.Property<DateTime>("ApprovedDateTime");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<bool>("IsApproved");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("MatricsCardPhoto");

                    b.Property<string>("MatricsNo");

                    b.Property<string>("Notes");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("PassengerApplicantId");

                    b.ToTable("PassengerApplicants");
                });

            modelBuilder.Entity("Unicab.Api.Models.PassengerBlacklist", b =>
                {
                    b.Property<int>("PassengerBlacklistId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlacklistedByAdminId");

                    b.Property<DateTime>("BlacklistedDateTime");

                    b.Property<int>("BlacklistedDuration");

                    b.Property<string>("BlacklistedReason");

                    b.Property<int>("PassengerId");

                    b.Property<int>("UnblacklistedByAdminId");

                    b.Property<DateTime>("UnblacklistedDateTime");

                    b.Property<string>("UnblacklistedReason");

                    b.HasKey("PassengerBlacklistId");

                    b.ToTable("PassengerBlacklists");
                });
#pragma warning restore 612, 618
        }
    }
}
